#!/bin/bash

COMMIT_MSG_FILE=$1
COMMIT_MSG=$(cat "$COMMIT_MSG_FILE")


if [[ -t 1 ]]; then # Use colors on terminal
    YELLOW='\033[0;33m'
    RED='\033[0;31m'
    NC='\033[0m'
fi


############################################################
""" 
This spell check ignores filenames from this repository 
and words starting with uppercase
"""

MSG_CHECK="$COMMIT_MSG" 
REPO_FILES=$(find . -path "./.git" -prune -o -type f -exec basename {} \;)

# Remove from words that match reposiotry filenames
MSG_CHECK=$(awk -v a="$MSG_CHECK" -v b="$REPO_FILES" '
BEGIN {
    split(a, arrA, " ");
    split(b, arrB, " ");
    for (i in arrB) bWords[arrB[i]] = 1;
    for (i in arrA) {
        if (arrA[i] in bWords) continue;
        if (arrA[i] != "") printf "%s ", arrA[i];
    }
    print "";
}')

if command -v aspell &> /dev/null; then
    SPELL_CHECKER="aspell list"

else
    echo -e "${RED}Error: 'aspell' not found. Please install.${NC}"
    echo -e "Use --no-verify on git command to bypass check"
    exit 1
fi


SPELL_ERRORS=$(echo "$MSG_CHECK" | $SPELL_CHECKER)
SPELL_ERRORS=$(echo $SPELL_ERRORS | grep -o '\b[a-z][a-zA-Z0-9]*\b') # Ignore Capitalized words

if [ ! -z "$SPELL_ERRORS" ]; then
    echo -e "${RED}Error: Commit message contains spelling errors:${NC} ${SPELL_ERRORS}"
    exit 1
fi

exit 0

#############################################